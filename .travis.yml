sudo: false

services:
- docker

language: cpp

os: linux
compiler: gcc

osx_image: xcode10.2

cache:
  directories:
  - "$HOME/.cache"

  git:
  depth: 100500

env: 'TEST_RUN_EXTRA_PARAMS="-j 1"'

stages:
  test
  build

jobs:
  allow_failures:
  - env: TARGET=test
  include:
  - stage: test
    name: RelWithDebInfo build + test (Linux, gcc)
    env: TARGET=test
  - stage: test
    name: RelWithDebInfo build + test (Linux, clang)
    env: TARGET=test
    compiler: clang
  - stage: test
    name: RelWithDebInfo build + test (OS X Mojave 10.14)
    env: TARGET=test
    os: osx
    skip: true
#   - if: false
#     name: Debug build + test + coverage (Linux, gcc)
#     env: TARGET=coverage
  - stage: build
    if: false
    name: Create and deploy tarball
    env: TARGET=source
    if: branch = "master"
  - stage: build
    name: CentOS 6 build + deploy RPM
    env: OS=el DIST=6
    if: branch = "master"
  - stage: build
    name: CentOS 7 build + test + deploy RPM
    env: OS=el DIST=7
    if: branch = "master"
  - stage: build
    name: Fedora 28 build + test + deploy RPM
    env: OS=fedora DIST=28
    if: branch = "master"
  - stage: build
    name: Fedora 29 build + test + deploy RPM
    env: OS=fedora DIST=29
    if: branch = "master"
  - stage: build
    name: Fedora 30 build + test + deploy RPM
    env: OS=fedora DIST=30
    if: branch = "master"
  - stage: build
    name: Ubuntu Trusty (14.04) build + deploy DEB
    env: OS=ubuntu DIST=trusty
    if: branch = "master"
  - stage: build
    name: Ubuntu Xenial (16.04) build + deploy DEB
    env: OS=ubuntu DIST=xenial
    if: branch = "master"
  - stage: build
    name: Ubuntu Bionic (18.04) build + deploy DEB
    env: OS=ubuntu DIST=bionic
    if: branch = "master"
  - stage: build
    name: Ubuntu Cosmic (18.10) build + deploy DEB
    env: OS=ubuntu DIST=cosmic
    if: branch = "master"
  - stage: build
    name: Ubuntu Disco (19.04) build + deploy DEB
    env: OS=ubuntu DIST=disco
    if: branch = "master"
  - stage: build
    name: Debian Jessie (8) build + deploy DEB
    env: OS=debian DIST=jessie
    if: branch = "master"
  - stage: build
    name: Debian Stretch (9) build + deploy DEB
    env: OS=debian DIST=stretch
    if: branch = "master"
  - stage: build
    name: Debian Buster (10) build + deploy DEB
    env: OS=debian DIST=buster
    if: branch = "master"
script:
- make -f .travis.mk ${TARGET}
before_deploy:
- ls -l build/
- make -f .travis.mk bintray_deploy
- ls -l extra/bintray/
- cat extra/bintray/descriptor.json
deploy:
- provider: bintray
  script: make -f .travis.mk bintray_deploy
  skip_cleanup: true
  file: extra/bintray/descriptor.json
  user: bigbes
  key: "${BINTRAY_API_KEY}"
  on:
    repo: olmiik/tarantool
    branch: master
    condition: (-n "${OS}" && -n "${DIST}") || "${TARGET}" = source
# notifications:
#   email:
#     recipients:
#     - build@tarantool.org
#     on_success: change
#     on_failure: always
